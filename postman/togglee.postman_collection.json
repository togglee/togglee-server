{
	"info": {
		"_postman_id": "37fb401a-9300-4d24-ae6c-bdb70d35a140",
		"name": "togglee",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Mutations",
					"item": [
						{
							"name": "1 - create user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"is expected response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.createUser.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uuid = require('uuid');",
											"pm.environment.set(\"user_email\", `${uuid.v4()}@somewhere.com`);",
											"pm.environment.set(\"user_password\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "isTest",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation($email: String!, $password: String!){\n  createUser(email: $email, password: $password){ \n      success\n  }\n}",
										"variables": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - login user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"is expected response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.validateCredentialsUser.success).to.eql(true);",
											"    pm.environment.set(\"user_id\", jsonData.data.validateCredentialsUser.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "isTest",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation($email: String!, $password: String!){\n  validateCredentialsUser(email: $email, password: $password){ \n      success,\n      id\n  }\n}",
										"variables": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Query",
					"item": [
						{
							"name": "3 - get user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "isTest",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query($id: String!) {\n    user(id:$id) {\n        id,\n        email,\n        isTest\n    }\n}",
										"variables": "{\n    \"id\": \"{{user_id}}\"\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Project",
			"item": [
				{
					"name": "Mutation",
					"item": [
						{
							"name": "4 - Upsert Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"is expected response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.createUser.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "isTest",
										"type": "text",
										"value": "true"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation($name: String!, $owner: String!, $toggles: [Any]!){ \n    upsertProject(name: $name, owner: $owner, toggles: $toggles){ \n        success \n    } \n}\n",
										"variables": "{\n    \"name\": \"default\",\n    \"owner\": \"{{user_id}}\",\n    \"toggles\": []\n}"
									}
								},
								"url": {
									"raw": "{{url}}/graphql",
									"host": [
										"{{url}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Query",
					"item": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}